<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/2wBDAAkGBwgHBgkIBwgKCgkLDRYPDQwMDRsUFRAWIB0iIiAdHx8k
        KDQsJCYxJx8fLT0tMTU3Ojo6Iys/RD84QzQ5Ojf/2wBDAQoKCg0MDRoPDxo3JR8lNzc3Nzc3Nzc3Nzc3
        Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzf/wAARCABGAEYDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDzu6nEMLqWwQ5wP7ozmqcMMlzmeTG0cqD3qtdTLczsxbC7+c+l
        aH2jdGFgjYqBgE8CutvmZ5rg6cVZasquSr5kI2noF71YsyXk2lTg9ccZ/Gr0GgXzaf8AbyqsjNtA7n6e
        1Mt0IA4Ge3FOnG7IqVFy2Rv+HNIOpahBZwISHYbj6DvX0Np9ulpZw28QwkaBQPpXmvwv0eS2s31OVCDK
        NsWfQdTXpNm2RgnJApYmV3ZdDTAwcVzPdlhuteXfFPWPtN7DpMRykP7ybB79hXousX6adp891IwAjQkZ
        7mvENWtL2dJNRndRNduWUMef/wBQFTh4K/MwzCo+X2a6nK69qAmuVQ58qMbVGc0Vq2mmLDaK92FPmHcC
        e9FbuDepwqvCC5bM4bS4DNcHepIHAHvXXaLo51SZYYyd+722he9UdAs0i0KS9bcLky4hPrjvXoHhSyFl
        pwkc4nnHJ9BmuRz5YXOyu+epa4ur+TZWEMjJ+7tRsgQfxtj0/X6VyGg6ZPq2sw2MandI/wA3HQd66DVt
        TSbUWLc28MZEQP8AEc4zXV/C7RmLTavOCHnVlRsdB6itaTcIcz3MIpVKnIjtNCEcKXOnIgEVi6xLgdQU
        Vuf++q0FULIxHA9q5vwzYSQ65q+7UJ50gkVFR2ByCikluOuentW5qd5Bp1nNdTsAkaFjzWCu3Y9XSMb9
        Ecj4+vzeXsGkQt8qkSTYPvgCuO1e9invGhjYKg/dIc8BR94/iapanrrwrdX0p/f3DZGewPQD8K5C41fk
        7eSRjmurlUVbsePOUq0nJdTc1+9WWdI4m/dxjC4orkZLmWVyd3FFNSRSwztuaemaiFtre3fpCPlH45ro
        ZPEEraeYIATIRgsOwrH8M2Ec4Mk4G3OM4zXqGg+FNPkj83dHtxkg9cfSp5I2XMEk5VWobnneiWF7q2pw
        2qBiXIHToK+hNOtRp9pDbRqoSNAOPaqPhmz0lIkutNSN0YfLKo61sahLKlpK1tEJJgpKKe5rKrPm0R3Y
        eiqa5nuc9ozxjW9b8kYd5E3keu3j9K5n4i6hLc3EWj2gLHHmTgHt2FbGjQ6ppmpz3NxZtIb2RWuDnOMD
        HHpxS6x4U0u7uZrlo5BPKTl1Yg/zpwtGVyaylOm4xPCPEEzSXRhDcRcEH171jkZbG9fcc166/wAO9OS7
        ECzsJZiSiSEEtjrVa6+H0NsWbYvHPArbl53uYRl7KNlHRHlUskQxtkI45wlFdtNolslw0CRJlRnO3qKK
        f1eXcn67BfZZR0zXhpoEUMSuFP7vcMcn/wCvXUxeJ9RPhNraaACSaRitwnyuQvJBH+eK8ttZ2SQyBsPn
        ABFdBd61cz2UDy53xN8rA42jpyPpj8qxcuY6PZum9Op2+laDd3dpHJpt68Pmr5nlByvJHPSsrWl1fSGg
        W4vZwJn2AJM3X3/Os3QvEL/YobGO5+zLG7O8hPVeuAeoqx4x1acLai8O9d6yxqDlguMYLd8kdKr2j7Ga
        oR5rao2bnRvFFvAsjXNy2R82Jm+WsXUptb06WMXl1cqHHy5kbnHWtnWfiCLwwYjR4kKyLtJUlgOQcdvb
        2rD8S6+NTuWmuLchohgIW4z3OPSmql+hM6LWzbJ4NQubVotTSdpbwZjiRmJK5B5/z3Irrr7xLFp9hp1v
        f3slxc2z/wCkNwWbK5wfpnrXj91qDb/lJVTyy7u2an1GZCfOtyVjOGBfnAPuck1Ep3lc2hS5Ycvc6mLx
        Chkk2FfvEhiMcE9AB0FFcWLgEZDEge2KK0VZ2MZYVN3uTT2qIHA7EjP0qK2czQeW+cAhSfWiis2tToi7
        xuxyMgibEY3L0bPelvbh7lFMx3nHGaKKkrqJbxeU+XbeSvdelQTXLtkAkLuLAZziiihoINu7Y24QSjzm
        PIGMAdaW2DTwvvdtoiOAPaiiktym/dIWUxwRAEHeN/09qKKKmTszWOquf//Z
</value>
  </data>
</root>